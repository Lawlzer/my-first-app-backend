{
	"files.eol": "\n", // End of Line (use LF, not CRLF)
	// "emeraldwalk.runonsave": {
	// 	"commands": [
	// 		{
	// 			"match": ".*",
	// 			"isAsync": true,
	// 			"cmd": "npm run lint | echo Code automatically linted."
	// 		},
	// 		{
	// 		    "match": "\\package.json$",
	// 		    "cmd": "npx sort-package-json | echo Package.json automatically sorted.'"
	// 		},
	// 		// {
	// 		//     "match": "\\.js$",
	// 		//     "cmd": "echo 'I am a .js file ${file}.'"
	// 		// },
	// 		// {
	// 		//     "match": ".*",
	// 		//     "cmd": "echo 'I am ${env.USERNAME}.'"
	// 		// }
	// 	]
	// },

	//
	// "editor.tabSize": 4, // tabSize should be from local settings, not forced on users.

	// These are used for helping VSCode work nicely with ESLint & Prettier - If removed, code will error a lot, then Prettier will fix it on-save. This just removes the initial errors
	"editor.detectIndentation": false, // VSCode will automatically change the indentation style depending on what it sees -- but it can be extremely weird and buggy. Unnecessary with ESLint/Prettier.
	"editor.insertSpaces": false, // Use Tabs for indentation, not spaces! Otherwise, ESLint will error
	//
	// ESLint stuff
	"editor.formatOnSave": true, // Run Prettier on save
	"eslint.format.enable": true, // Maybe unecessary? // Maybe we actually want to disable this now?
	"eslint.run": "onSave",
	"eslint.workingDirectories": ["**/*"],
	"editor.codeActionsOnSave": {
		"source.fixAll.eslint": true
	},
	"eslint.validate": ["javascript", "typescript", "javascriptreact", "typescriptreact", "json", "jsonc"],
	"editor.quickSuggestions": {
		// Honestly, not 100% sure what this does
		"strings": true
	},
	"typescript.tsdk": "node_modules\\typescript\\lib", // VSCode should use the same TypeScript version as the project
	//
	// Prettier settings
	"editor.defaultFormatter": "esbenp.prettier-vscode", // Force VSCode to use Prettier
	"prettier.enable": true
}
